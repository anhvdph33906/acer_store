/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Dialog.java to edit this template
 */
package Interfaces;

import com.acerstore.app.dao.SanPhamChiTietDao;
import com.acerstore.app.model.HeDieuHanh;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JeongDoo
 */
public class HeDieuHanhhJDaLog extends java.awt.Dialog {

    DefaultTableModel tblmodel;
    SanPhamChiTietDao spcdao = new SanPhamChiTietDao();

    public HeDieuHanhhJDaLog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.filltoTableHDH(spcdao.getHeDieuHanh());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblHDH = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTenHDH = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        rdoHD = new javax.swing.JRadioButton();
        rdoKHD = new javax.swing.JRadioButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        tblHDH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Hệ Điều Hành", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHDH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHDHMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHDH);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hệ điều hành", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        jLabel1.setText("Tên");

        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.setEnabled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel3.setText("Trạng thái");

        rdoHD.setSelected(true);
        rdoHD.setText("Hoạt động");

        rdoKHD.setText("Không hoạt động");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(59, 59, 59)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTenHDH, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnAdd)
                                    .addComponent(rdoHD))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(rdoKHD))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addComponent(btnUpdate)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnDelete)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtTenHDH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(rdoHD)
                    .addComponent(rdoKHD))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        add(jPanel1, java.awt.BorderLayout.NORTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void tblHDHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHDHMouseClicked
        // TODO add your handling code here:
        int index = tblHDH.getSelectedRow();
        showDetailHDH(index);
        btnUpdate.setEnabled(true);
        btnDelete.setEnabled(true);
    }//GEN-LAST:event_tblHDHMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        this.addHDH();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        this.deleteHDH();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        this.updateHDH();
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                HeDieuHanhhJDaLog dialog = new HeDieuHanhhJDaLog(new java.awt.Frame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdoHD;
    private javax.swing.JRadioButton rdoKHD;
    private javax.swing.JTable tblHDH;
    private javax.swing.JTextField txtTenHDH;
    // End of variables declaration//GEN-END:variables

    private void filltoTableHDH(List<HeDieuHanh> heDieuHanh) {
        tblmodel = (DefaultTableModel) tblHDH.getModel();
        tblmodel.setRowCount(0);
        for (HeDieuHanh hdh : heDieuHanh) {
            tblmodel.addRow(new Object[]{
                hdh.getIdHDH(),
                hdh.getTenHDH(),
                hdh.isTtHDH() ? "Hoạt động" : "Không hoạt động"
            });
        }
    }

    private HeDieuHanh readDataHDH() {
        int id = 0;
        String ten = txtTenHDH.getText();
        boolean tt;
        if (tt = rdoHD.isSelected()) {
            tt = true;
        } else {
            tt = false;
        }
        return new HeDieuHanh(id, ten, tt);
    }

    private void showDetailHDH(int index) {
        HeDieuHanh mh = spcdao.getHeDieuHanh().get(index);
        txtTenHDH.setText(mh.getTenHDH());
        rdoHD.setSelected(mh.isTtHDH());
        tblHDH.setRowSelectionInterval(index, index);
    }

    private void addHDH() {
        if (checkDataHDH()) {
            HeDieuHanh mh = readDataHDH();
            if (spcdao.AddHeDieuHanh(mh) > 0) {
                JOptionPane.showMessageDialog(this, "add successful");
                filltoTableHDH(spcdao.getHeDieuHanh());
            } else {
                JOptionPane.showMessageDialog(this, "add failed");
            }
        }
    }

    private void deleteHDH() {
        int index = tblHDH.getSelectedRow();
        int id = Integer.parseInt(tblHDH.getValueAt(index, 0).toString());
        if (spcdao.deleteHDH(id) > 0) {
            JOptionPane.showMessageDialog(this, "delete successful");
            filltoTableHDH(spcdao.getHeDieuHanh());
        } else {
            JOptionPane.showMessageDialog(this, "delete failed");
        }
        txtTenHDH.setText("");
        rdoHD.isSelected();
        btnDelete.setEnabled(false);
    }

    private void updateHDH() {
        if (checkDataHDH()) {
            HeDieuHanh mh = readDataHDH();
            int index = tblHDH.getSelectedRow();
            int id = Integer.parseInt(tblHDH.getValueAt(index, 0).toString());
            if (spcdao.updateHDH(mh, id) > 0) {
                JOptionPane.showMessageDialog(this, "update successful");
                filltoTableHDH(spcdao.getHeDieuHanh());
            } else {
                JOptionPane.showMessageDialog(this, "update failed");
            }
            txtTenHDH.setText("");
            rdoHD.isSelected();
            btnUpdate.setEnabled(false);
        }
    }

    private boolean checkDataHDH() {
        if (txtTenHDH.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "empty");
            txtTenHDH.requestFocus();
            return false;
        }
        return true;
    }
}
